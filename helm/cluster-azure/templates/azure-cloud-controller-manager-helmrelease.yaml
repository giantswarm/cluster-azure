{{/* Default Helm values for the app */}}
{{/* See schema for the appropriate app version here https://github.com/giantswarm/azure-cloud-controller-manager-app/blob/main/helm/azure-cloud-controller-manager-app/values.schema.json */}}
{{- define "defaultAzureCloudControllerManagerHelmValues" }}
verticalPodAutoscaler:
  enabled: {{ .Values.internal.enableVpaResources }}
cluster:
  calico:
    CIDR: {{ first .Values.global.connectivity.network.pods.cidrBlocks | quote }}
controller:
  azureCredentialFile: "/etc/kubernetes/azure.json"
  kubeconfigFromHost: false
global:
  podSecurityStandards:
    enforced: {{ .Values.global.podSecurityStandards.enforced }}
{{- end }}
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: {{ include "resource.default.name" $ }}-azure-cloud-controller-manager
  namespace: {{ .Release.Namespace }}
  annotations:
    cluster.giantswarm.io/description: "{{ .Values.global.metadata.description }}"
  labels:
    cluster-apps-operator.giantswarm.io/watching: ""
    {{- if .Values.global.metadata.servicePriority }}
    giantswarm.io/service-priority: {{ .Values.global.metadata.servicePriority }}
    {{- end }}
    {{- include "labels.common" . | nindent 4 }}
spec:
  suspend: false
  releaseName: azure-cloud-controller-manager
  targetNamespace: kube-system
  storageNamespace: kube-system
  chart:
    spec:
      chart: azure-cloud-controller-manager-app
      {{- $_ := set $ "appName" "azure-cloud-controller-manager" }}
      {{- $appVersion := include "cluster.app.version" $ }}
      version: {{ $appVersion }}
      sourceRef:
        kind: HelmRepository
        name: {{ include "resource.default.name" $ }}-default
  kubeConfig:
    secretRef:
      name: {{ include "resource.default.name" $ }}-kubeconfig
  dependsOn:
    - name: {{ include "resource.default.name" $ }}-vertical-pod-autoscaler-crd
      namespace: {{ $.Release.Namespace }}
  interval: 2m
  install:
    remediation:
      retries: 30
  {{- $azureCloudControllerManagerHelmValues := (include "defaultAzureCloudControllerManagerHelmValues" .) | fromYaml -}}
  {{- $customAzureCloudControllerManagerHelmValues := $.Values.global.apps.azureCloudControllerManager.values -}}
  {{- if $customAzureCloudControllerManagerHelmValues }}
  {{- $azureCloudControllerManagerHelmValues = merge (deepCopy $customAzureCloudControllerManagerHelmValues) $azureCloudControllerManagerHelmValues -}}
  {{- end }}
  {{- if $azureCloudControllerManagerHelmValues }}
  values: {{- $azureCloudControllerManagerHelmValues | toYaml | nindent 4 }}
  {{- end }}
  {{- if $.Values.global.apps.azureCloudControllerManager.extraConfigs }}
  valuesFrom:
    {{- range $config := $.Values.global.apps.azureCloudControllerManager.extraConfigs }}
    - kind: {{ $config.kind }}
      name: {{ $config.name }}
      valuesKey: values
      optional: {{ $config.optional | default false  }}
    {{- end }}
  {{- end }}
