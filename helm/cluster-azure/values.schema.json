{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "type": "object",
    "title": "Cluster configuration",
    "description": "Configuration of an Azure cluster using Cluster API",
    "additionalProperties": false,
    "properties": {
        "baseDomain": {
            "type": "string",
            "title": "Base DNS domain",
            "default": "azuretest.gigantic.io"
        },
        "cluster-shared": {
            "type": "object",
            "title": "Library chart"
        },
        "connectivity": {
            "type": "object",
            "title": "Connectivity",
            "properties": {
                "allowedCIDRs": {
                    "type": "array",
                    "title": "List of CIDRs which have to been allowed to connect to the API Server endpoint",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                },
                "bastion": {
                    "type": "object",
                    "title": "Bastion host",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "title": "Enable bastion host for this cluster",
                            "default": true
                        },
                        "instanceType": {
                            "type": "string",
                            "title": "VM size",
                            "description": "Type of virtual machine to use for the bastion host.",
                            "default": "Standard_D2s_v5"
                        }
                    }
                },
                "network": {
                    "type": "object",
                    "title": "Network",
                    "properties": {
                        "controlPlane": {
                            "type": "object",
                            "title": "Control plane",
                            "properties": {
                                "cidr": {
                                    "type": "string",
                                    "title": "Subnet",
                                    "default": "10.0.0.0/20"
                                }
                            }
                        },
                        "hostCidr": {
                            "type": "string",
                            "title": "Node subnet",
                            "description": "IPv4 address range for nodes, in CIDR notation.",
                            "default": "10.0.0.0/16"
                        },
                        "mode": {
                            "type": "string",
                            "title": "Network mode",
                            "description": "Specifying if the cluster resources are publicly accessible or not.",
                            "enum": [
                                "public",
                                "private"
                            ],
                            "default": "public"
                        },
                        "podCidr": {
                            "type": "string",
                            "title": "Pod subnet",
                            "description": "IPv4 address range for pods, in CIDR notation.",
                            "default": "192.168.0.0/16"
                        },
                        "serviceCidr": {
                            "type": "string",
                            "title": "Service subnet",
                            "description": "IPv4 address range for services, in CIDR notation.",
                            "default": "172.31.0.0/16"
                        },
                        "workers": {
                            "type": "object",
                            "title": "Workers",
                            "properties": {
                                "cidr": {
                                    "type": "string",
                                    "title": "Subnet",
                                    "default": "10.0.16.0/20"
                                }
                            }
                        }
                    }
                },
                "sshSSOPublicKey": {
                    "type": "string",
                    "title": "SSH Public key for single sign-on",
                    "default": "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIM4cvZ01fLmO9cJbWUj7sfF+NhECgy+Cl0bazSrZX7sU vault-ca@vault.operations.giantswarm.io"
                }
            }
        },
        "controlPlane": {
            "type": "object",
            "title": "Control plane",
            "properties": {
                "etcdVolumeSizeGB": {
                    "type": "integer",
                    "title": "Etcd volume size (GB)",
                    "default": 10,
                    "exclusiveMinimum": 0
                },
                "instanceType": {
                    "type": "string",
                    "title": "Node VM size",
                    "default": "Standard_D4s_v3"
                },
                "oidc": {
                    "type": "object",
                    "title": "OIDC authentication",
                    "properties": {
                        "caPem": {
                            "type": "string",
                            "title": "Certificate authority",
                            "description": "Identity provider's CA certificate in PEM format.",
                            "default": ""
                        },
                        "clientId": {
                            "type": "string",
                            "title": "Client ID",
                            "default": ""
                        },
                        "groupsClaim": {
                            "type": "string",
                            "title": "Groups claim",
                            "default": ""
                        },
                        "issuerUrl": {
                            "type": "string",
                            "title": "Issuer URL",
                            "default": ""
                        },
                        "usernameClaim": {
                            "type": "string",
                            "title": "Username claim",
                            "default": ""
                        }
                    }
                },
                "replicas": {
                    "type": "integer",
                    "title": "Number of nodes",
                    "default": 3,
                    "exclusiveMinimum": 0
                },
                "rootVolumeSizeGB": {
                    "type": "integer",
                    "title": "Root volume size (GB)",
                    "default": 50,
                    "exclusiveMinimum": 0
                }
            }
        },
        "internal": {
            "type": "object",
            "title": "Internal settings",
            "properties": {
                "defaults": {
                    "type": "object",
                    "title": "Default settings",
                    "properties": {
                        "evictionMinimumReclaim": {
                            "type": "string",
                            "title": "Default settings for eviction minimum reclaim",
                            "default": "imagefs.available=5%,memory.available=100Mi,nodefs.available=5%"
                        },
                        "hardEvictionThresholds": {
                            "type": "string",
                            "title": "Default settings for hard eviction thresholds",
                            "default": "memory.available<200Mi,nodefs.available<10%,nodefs.inodesFree<3%,imagefs.available<10%,pid.available<20%"
                        },
                        "softEvictionGracePeriod": {
                            "type": "string",
                            "title": "Default settings for soft eviction grace period",
                            "default": "memory.available=30s,nodefs.available=2m,nodefs.inodesFree=1m,imagefs.available=2m,pid.available=1m"
                        },
                        "softEvictionThresholds": {
                            "type": "string",
                            "title": "Default settings for soft eviction thresholds",
                            "default": "memory.available<500Mi,nodefs.available<15%,nodefs.inodesFree<5%,imagefs.available<15%,pid.available<30%"
                        }
                    }
                },
                "identity": {
                    "type": "object",
                    "title": "Identity",
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "Type of Identity",
                            "enum": [
                                "SystemAssigned",
                                "UserAssigned"
                            ],
                            "default": "SystemAssigned"
                        },
                        "attachCapzControllerUserAssignedIdentity": {
                            "type": "boolean",
                            "title": "Attach CAPZ controller UserAssigned identity",
                            "default": false
                        },
                        "systemAssignedScope": {
                            "type": "string",
                            "title": "Scope of SystemAssignedIdentity",
                            "enum": [
                                "Subscription",
                                "ResourceGroup"
                            ],
                            "default": "ResourceGroup"
                        },
                        "userAssignedCustomIdentities": {
                            "type": "array",
                            "title": "List of custom UserAssigned Identities to attach to all nodes",
                            "default": []
                        }
                    }
                },
                "image": {
                    "type": "object",
                    "title": "Node Image",
                    "properties": {
                        "gallery": {
                            "type": "string",
                            "title": "Gallery",
                            "description": "Name of the community gallery hosting the image",
                            "default": "gsCapzFlatcar-41c2d140-ac44-4d8b-b7e1-7b2f1ddbe4d0"
                        },
                        "name": {
                            "type": "string",
                            "title": "Image Definition",
                            "description": "Name of the image definition in the Gallery",
                            "default": ""
                        },
                        "version": {
                            "type": "string",
                            "title": "Image version",
                            "default": "3510.2.1"
                        }
                    }
                },
                "kubernetesVersion": {
                    "type": "string",
                    "title": "Kubernetes version",
                    "default": "1.24.13"
                },
                "network": {
                    "type": "object",
                    "title": "Network configuration",
                    "description": "Internal network configuration that is susceptible to more frequent change",
                    "properties": {
                        "subnets": {
                            "type": "object",
                            "title": "VNet spec",
                            "description": "Customize subnets configuration",
                            "properties": {
                                "controlPlaneSubnetName": {
                                    "type": "string",
                                    "title": "ControlPlane subnet name",
                                    "description": "Name of the control plane subnet.",
                                    "maxLength": 64,
                                    "minLength": 2,
                                    "pattern": "^[-\\w\\._]+$"
                                },
                                "nodeSubnetNatGatewayName": {
                                    "type": "string",
                                    "title": "Nodes subnet nat-gateway name",
                                    "description": "Name of the nat gateway on the nodes subnet.",
                                    "maxLength": 64,
                                    "minLength": 2,
                                    "pattern": "^[-\\w\\._]+$"
                                },
                                "nodesSubnetName": {
                                    "type": "string",
                                    "title": "Nodes subnet name",
                                    "description": "Name of the nodes subnet.",
                                    "maxLength": 64,
                                    "minLength": 2,
                                    "pattern": "^[-\\w\\._]+$"
                                }
                            },
                            "default": {}
                        },
                        "vnet": {
                            "type": "object",
                            "title": "VNet spec",
                            "description": "Existing VNet configuration. This is susceptible to more frequent change or removal.",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "title": "VNet name",
                                    "description": "Name of the existing VNet.",
                                    "maxLength": 64,
                                    "minLength": 2,
                                    "pattern": "^[-\\w\\._]+$"
                                },
                                "resourceGroup": {
                                    "type": "string",
                                    "title": "Resource group name",
                                    "description": "Resource group where the existing VNet is deployed.",
                                    "maxLength": 90,
                                    "minLength": 1,
                                    "pattern": "^[-\\w\\._\\(\\)]+$"
                                }
                            },
                            "default": {}
                        },
                        "vpn": {
                            "type": "object",
                            "title": "VPN configuration",
                            "description": "Internal VPN configuration that is susceptible to more frequent change",
                            "properties": {
                                "gatewayMode": {
                                    "type": "string",
                                    "title": "VPN gateway mode",
                                    "enum": [
                                        "local",
                                        "none",
                                        "remote"
                                    ],
                                    "default": "none"
                                }
                            }
                        }
                    }
                }
            }
        },
        "managementCluster": {
            "type": "string",
            "title": "The capi MC managing this cluster"
        },
        "metadata": {
            "type": "object",
            "title": "Metadata",
            "properties": {
                "description": {
                    "type": "string",
                    "title": "Cluster description",
                    "description": "User-friendly description of the cluster's purpose."
                },
                "name": {
                    "type": "string",
                    "title": "Cluster name",
                    "description": "Unique identifier, cannot be changed after creation."
                },
                "organization": {
                    "type": "string",
                    "title": "Organization"
                },
                "servicePriority": {
                    "type": "string",
                    "title": "Service priority",
                    "description": "The relative importance of this cluster.",
                    "$comment": "Defined in https://github.com/giantswarm/rfc/tree/main/classify-cluster-priority",
                    "enum": [
                        "highest",
                        "medium",
                        "lowest"
                    ],
                    "default": "highest"
                }
            }
        },
        "nodePools": {
            "type": "array",
            "title": "Node pools",
            "items": {
                "type": "object",
                "title": "Node pool",
                "properties": {
                    "customNodeLabels": {
                        "type": "array",
                        "title": "Custom node labels",
                        "items": {
                            "type": "string",
                            "title": "Label"
                        }
                    },
                    "customNodeTaints": {
                        "type": "array",
                        "title": "Custom node taints",
                        "items": {
                            "type": "object",
                            "title": "Node taint",
                            "required": [
                                "effect",
                                "key",
                                "value"
                            ],
                            "properties": {
                                "effect": {
                                    "type": "string",
                                    "title": "Effect",
                                    "enum": [
                                        "NoSchedule",
                                        "PreferNoSchedule",
                                        "NoExecute"
                                    ]
                                },
                                "key": {
                                    "type": "string",
                                    "title": "Key"
                                },
                                "value": {
                                    "type": "string",
                                    "title": "Value"
                                }
                            }
                        },
                        "descriptions": "Taints that will be set on all nodes in the node pool, to avoid the scheduling of certain workloads."
                    },
                    "disableHealthCheck": {
                        "type": "boolean",
                        "title": "Disable HealthChecks for the MachineDeployment"
                    },
                    "failureDomain": {
                        "type": "string",
                        "title": "Select zone where to deploy the nodePool",
                        "enum": [
                            "1",
                            "2",
                            "3"
                        ]
                    },
                    "instanceType": {
                        "type": "string",
                        "title": "VM size"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Unique identifier, cannot be changed after creation."
                    },
                    "replicas": {
                        "type": "integer",
                        "title": "Number of nodes",
                        "minimum": 0
                    },
                    "rootVolumeSizeGB": {
                        "type": "integer",
                        "title": "Root volume size (GB)",
                        "exclusiveMinimum": 0
                    }
                }
            },
            "default": [
                {
                    "customNodeLabels": [],
                    "customNodeTaints": [],
                    "disableHealthCheck": false,
                    "instanceType": "Standard_D2s_v3",
                    "name": "md00",
                    "replicas": 3,
                    "rootVolumeSizeGB": 50
                }
            ]
        },
        "provider": {
            "type": "string",
            "title": "Cluster API provider name"
        },
        "providerSpecific": {
            "type": "object",
            "title": "Azure settings",
            "properties": {
                "azureClusterIdentity": {
                    "type": "object",
                    "title": "Identity",
                    "description": "AzureClusterIdentity resource to use for this cluster.",
                    "properties": {
                        "name": {
                            "type": "string",
                            "title": "Name",
                            "default": "cluster-identity"
                        },
                        "namespace": {
                            "type": "string",
                            "title": "Namespace",
                            "default": "org-giantswarm"
                        }
                    }
                },
                "location": {
                    "type": "string",
                    "title": "Location",
                    "default": "westeurope"
                },
                "network": {
                    "type": "object",
                    "title": "Azure network settings",
                    "description": "Azure VNet peering and other Azure-specific network settings.",
                    "additionalProperties": false,
                    "properties": {
                        "peerings": {
                            "type": "array",
                            "title": "VNet peerings",
                            "description": "Specifying VNets (their resource groups and names) to which the peering is established.",
                            "items": {
                                "type": "object",
                                "title": "VNet peering",
                                "additionalProperties": false,
                                "properties": {
                                    "remoteVnetName": {
                                        "type": "string",
                                        "title": "VNet name",
                                        "description": "Name of the remote VNet to which the peering is established.",
                                        "maxLength": 64,
                                        "minLength": 2,
                                        "pattern": "^[-\\w\\._]+$"
                                    },
                                    "resourceGroup": {
                                        "type": "string",
                                        "title": "Resource group name",
                                        "description": "Resource group for the remote VNet to which the peering is established.",
                                        "maxLength": 90,
                                        "minLength": 1,
                                        "pattern": "^[-\\w\\._\\(\\)]+$"
                                    }
                                },
                                "uniqueItems": true
                            },
                            "default": []
                        }
                    }
                },
                "subscriptionId": {
                    "type": "string",
                    "title": "Subscription ID"
                }
            }
        }
    }
}
