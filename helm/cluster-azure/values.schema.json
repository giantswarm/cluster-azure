{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$defs": {
        "app": {
            "type": "object",
            "title": "App",
            "description": "Configuration of an default app that is part of the cluster.",
            "additionalProperties": false,
            "properties": {
                "extraConfigs": {
                    "type": "array",
                    "title": "Extra config maps or secrets",
                    "description": "Extra config maps or secrets that will be used to customize to the app. The desired values must be under configmap or secret key 'values'. The values are merged in the order given, with the later values overwriting earlier, and then inline values overwriting those. Resources must be in the same namespace as the cluster.",
                    "items": {
                        "type": "object",
                        "title": "Config map or secret",
                        "properties": {
                            "kind": {
                                "type": "string",
                                "title": "Kind",
                                "description": "Specifies whether the resource is a config map or a secret.",
                                "enum": [
                                    "configMap",
                                    "secret"
                                ]
                            },
                            "name": {
                                "type": "string",
                                "title": "Name",
                                "description": "Name of the config map or secret. The object must exist in the same namespace as the cluster App."
                            },
                            "priority": {
                                "type": "integer",
                                "title": "Priority",
                                "default": 25,
                                "max": 150,
                                "min": 1
                            }
                        }
                    }
                },
                "values": {
                    "type": "object",
                    "title": "Values",
                    "description": "Values to be passed to the app. Values will have higher priority than values from configmaps.",
                    "additionalProperties": true
                }
            }
        },
        "helmRelease": {
            "type": "object",
            "title": "App",
            "description": "Configuration of a default app that is part of the cluster and is deployed as a HelmRelease resource.",
            "additionalProperties": false,
            "properties": {
                "extraConfigs": {
                    "type": "array",
                    "title": "Extra config maps or secrets",
                    "description": "Extra config maps or secrets that will be used to customize to the app. The desired values must be under configmap or secret key 'values'. The values are merged in the order given, with the later values overwriting earlier, and then inline values overwriting those. Resources must be in the same namespace as the cluster.",
                    "items": {
                        "type": "object",
                        "title": "Config map or secret",
                        "properties": {
                            "kind": {
                                "type": "string",
                                "title": "Kind",
                                "description": "Specifies whether the resource is a config map or a secret.",
                                "enum": [
                                    "ConfigMap",
                                    "Secret"
                                ]
                            },
                            "name": {
                                "type": "string",
                                "title": "Name",
                                "description": "Name of the config map or secret. The object must exist in the same namespace as the cluster App."
                            },
                            "optional": {
                                "type": "boolean",
                                "title": "Optional",
                                "description": "Optional marks this ValuesReference as optional. When set, a not found error for the values reference is ignored, but any ValuesKey, TargetPath or transient error will still result in a reconciliation failure."
                            }
                        }
                    }
                },
                "values": {
                    "type": "object",
                    "title": "Values",
                    "description": "Values to be passed to the app. Values will have higher priority than values from configmaps.",
                    "additionalProperties": true
                }
            }
        },
        "machinePool": {
            "type": "object",
            "title": "Node pool",
            "properties": {
                "customNodeLabels": {
                    "type": "array",
                    "title": "Custom node labels",
                    "items": {
                        "type": "string",
                        "title": "Label"
                    }
                },
                "customNodeTaints": {
                    "type": "array",
                    "title": "Custom node taints",
                    "items": {
                        "type": "object",
                        "required": [
                            "effect",
                            "key",
                            "value"
                        ],
                        "properties": {
                            "effect": {
                                "type": "string",
                                "title": "Effect",
                                "enum": [
                                    "NoSchedule",
                                    "PreferNoSchedule",
                                    "NoExecute"
                                ]
                            },
                            "key": {
                                "type": "string",
                                "title": "Key"
                            },
                            "value": {
                                "type": "string",
                                "title": "Value"
                            }
                        }
                    }
                },
                "encryptionAtHost": {
                    "type": "boolean",
                    "title": "Encryption at host",
                    "description": "Enable encryption at host for the worker nodes.",
                    "default": false
                },
                "failureDomain": {
                    "type": "string",
                    "title": "Availability zone",
                    "enum": [
                        "1",
                        "2",
                        "3"
                    ]
                },
                "instanceType": {
                    "type": "string",
                    "title": "VM size",
                    "default": "Standard_D4s_v5"
                },
                "replicas": {
                    "type": "integer",
                    "title": "Number of nodes",
                    "default": 2,
                    "minimum": 0
                },
                "rootVolumeSizeGB": {
                    "type": "integer",
                    "title": "Root volume size (GB)",
                    "default": 50,
                    "exclusiveMinimum": 0
                }
            }
        },
        "subscriptionId": {
            "type": "string",
            "title": "Azure Subscription ID",
            "examples": [
                "291bba3f-e0a5-47bc-a099-3bdcb2a50a05"
            ],
            "maxLength": 36,
            "minLength": 36,
            "pattern": "^[a-fA-F0-9][-a-fA-F0-9]+[a-fA-F0-9]$"
        }
    },
    "type": "object",
    "additionalProperties": false,
    "properties": {
        "baseDomain": {
            "type": "string",
            "title": "Base DNS domain",
            "default": "azuretest.gigantic.io"
        },
        "cluster": {
            "type": "object",
            "title": "Cluster",
            "description": "Helm values for the provider-independent cluster chart.",
            "default": {
                "internal": {
                    "advancedConfiguration": {
                        "controlPlane": {
                            "etcd": {
                                "dataDir": "/var/lib/etcddisk/etcd"
                            }
                        }
                    }
                },
                "providerIntegration": {
                    "apps": {
                        "capiNodeLabeler": {
                            "enable": true
                        },
                        "certExporter": {
                            "enable": true
                        },
                        "certManager": {
                            "configTemplateName": "azureCertManagerHelmValues",
                            "enable": true
                        },
                        "chartOperatorExtensions": {
                            "enable": true
                        },
                        "cilium": {
                            "configTemplateName": "azureCiliumHelmValues",
                            "enable": true
                        },
                        "ciliumServiceMonitors": {
                            "enable": true
                        },
                        "clusterAutoscaler": {
                            "enable": false
                        },
                        "coreDns": {
                            "configTemplateName": "azureCorednsHelmValues",
                            "enable": true
                        },
                        "etcdKubernetesResourcesCountExporter": {
                            "enable": true
                        },
                        "externalDns": {
                            "configTemplateName": "azureExternalDnsHelmValues",
                            "enable": true
                        },
                        "k8sAuditMetrics": {
                            "enable": true
                        },
                        "k8sDnsNodeCache": {
                            "enable": true
                        },
                        "metricsServer": {
                            "enable": true
                        },
                        "netExporter": {
                            "enable": true
                        },
                        "networkPolicies": {
                            "configTemplateName": "azureNetworkPoliciesHelmValues",
                            "enable": true
                        },
                        "nodeExporter": {
                            "enable": true
                        },
                        "observabilityBundle": {
                            "enable": true
                        },
                        "prometheusBlackboxExporter": {
                            "enable": true
                        },
                        "securityBundle": {
                            "configTemplateName": "azureSecurityBundleHelmValues",
                            "enable": true
                        },
                        "teleportKubeAgent": {
                            "enable": true
                        },
                        "verticalPodAutoscaler": {
                            "enable": true
                        },
                        "verticalPodAutoscalerCrd": {
                            "enable": true
                        }
                    },
                    "controlPlane": {
                        "kubeadmConfig": {
                            "clusterConfiguration": {
                                "apiServer": {
                                    "cloudConfig": "/etc/kubernetes/azure.json"
                                }
                            },
                            "diskSetup": {
                                "filesystems": [
                                    {
                                        "device": "/dev/disk/azure/scsi1/lun0",
                                        "extraOpts": [
                                            "-E",
                                            "lazy_itable_init=1,lazy_journal_init=1"
                                        ],
                                        "filesystem": "ext4",
                                        "label": "etcd_disk",
                                        "overwrite": false
                                    },
                                    {
                                        "device": "/dev/disk/azure/scsi1/lun1",
                                        "extraOpts": [
                                            "-E",
                                            "lazy_itable_init=1,lazy_journal_init=1"
                                        ],
                                        "filesystem": "ext4",
                                        "label": "containerd_disk",
                                        "overwrite": false
                                    },
                                    {
                                        "device": "/dev/disk/azure/scsi1/lun2",
                                        "extraOpts": [
                                            "-E",
                                            "lazy_itable_init=1,lazy_journal_init=1"
                                        ],
                                        "filesystem": "ext4",
                                        "label": "kubelet_disk",
                                        "overwrite": false
                                    }
                                ]
                            },
                            "files": [
                                {
                                    "contentFrom": {
                                        "secret": {
                                            "key": "update_etc_hosts.sh",
                                            "name": "provider-specific-files",
                                            "prependClusterNameAsPrefix": true
                                        }
                                    },
                                    "path": "/opt/update_etc_hosts.sh",
                                    "permissions": "0755"
                                }
                            ],
                            "ignition": {
                                "containerLinuxConfig": {
                                    "additionalConfig": {
                                        "storage": {
                                            "disks": [
                                                {
                                                    "device": "/dev/disk/azure/scsi1/lun0",
                                                    "partitions": [
                                                        {
                                                            "number": 1
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            "mounts": [
                                [
                                    "etcd_disk",
                                    "/var/lib/etcddisk"
                                ],
                                [
                                    "containerd_disk",
                                    "/var/lib/containerd"
                                ],
                                [
                                    "kubelet_disk",
                                    "/var/lib/kubelet"
                                ]
                            ],
                            "postKubeadmCommands": [
                                "/opt/update_etc_hosts.sh postKubeadm"
                            ],
                            "preKubeadmCommands": [
                                "/opt/update_etc_hosts.sh preKubeadm",
                                "/bin/test ! -d /var/lib/kubelet && (/bin/mkdir -p /var/lib/kubelet && /bin/chmod 0750 /var/lib/kubelet)",
                                "sed -i -e 's/registry.k8s.io\\/pause/quay.io\\/giantswarm\\/pause/' /etc/sysconfig/kubelet"
                            ]
                        },
                        "resources": {
                            "infrastructureMachineTemplate": {
                                "group": "infrastructure.cluster.x-k8s.io",
                                "kind": "AzureMachineTemplate",
                                "version": "v1beta1"
                            },
                            "infrastructureMachineTemplateSpecTemplateName": "controlplane-azuremachinetemplate-spec"
                        }
                    },
                    "environmentVariables": {
                        "hostName": "HOSTNAME",
                        "ipv4": "COREOS_AZURE_IPV4_DYNAMIC"
                    },
                    "osImage": {
                        "channel": "stable",
                        "variant": "",
                        "version": "3815.2.0"
                    },
                    "provider": "azure",
                    "resourcesApi": {
                        "bastionResourceEnabled": false,
                        "cleanupHelmReleaseResourcesEnabled": true,
                        "clusterResourceEnabled": true,
                        "controlPlaneResourceEnabled": true,
                        "coreDnsHelmReleaseResourceEnabled": false,
                        "helmRepositoryResourcesEnabled": true,
                        "infrastructureCluster": {
                            "group": "infrastructure.cluster.x-k8s.io",
                            "kind": "AzureCluster",
                            "version": "v1beta1"
                        },
                        "infrastructureMachinePool": {
                            "group": "infrastructure.cluster.x-k8s.io",
                            "kind": "AzureMachineTemplate",
                            "version": "v1beta1"
                        },
                        "machineHealthCheckResourceEnabled": true,
                        "machinePoolResourcesEnabled": true,
                        "nodePoolKind": "MachineDeployment"
                    },
                    "useReleases": true,
                    "workers": {
                        "defaultNodePools": {
                            "def00": {
                                "customNodeLabels": [
                                    "label=default"
                                ],
                                "instanceType": "Standard_D4s_v5",
                                "machineHealthCheck": {
                                    "enabled": true,
                                    "maxUnhealthy": "40%",
                                    "nodeStartupTimeout": "10m",
                                    "unhealthyNotReadyTimeout": "300s",
                                    "unhealthyUnknownTimeout": "300s"
                                },
                                "replicas": 2,
                                "rootVolumeSizeGB": 50
                            }
                        },
                        "kubeadmConfig": {
                            "preKubeadmCommands": [
                                "/bin/test ! -d /var/lib/kubelet && (/bin/mkdir -p /var/lib/kubelet && /bin/chmod 0750 /var/lib/kubelet)",
                                "sed -i -e 's/registry.k8s.io\\/pause/quay.io\\/giantswarm\\/pause/' /etc/sysconfig/kubelet"
                            ]
                        },
                        "resources": {
                            "infrastructureMachineTemplateSpecTemplateName": "machinedeployment-azuremachinetemplate-spec"
                        }
                    }
                }
            }
        },
        "cluster-shared": {
            "type": "object",
            "title": "Library chart"
        },
        "global": {
            "type": "object",
            "title": "Global",
            "description": "Properties that are available to all charts and subcharts.",
            "required": [
                "metadata",
                "release"
            ],
            "additionalProperties": true,
            "properties": {
                "apps": {
                    "type": "object",
                    "title": "Apps",
                    "description": "Configuration of apps that are part of the cluster.",
                    "additionalProperties": false,
                    "properties": {
                        "azureCloudControllerManager": {
                            "$ref": "#/$defs/helmRelease",
                            "type": "object",
                            "title": "Azure cloud controller manager",
                            "description": "Configuration of azure-cloud-controller-manager-app. For all available values see https://github.com/giantswarm/azure-cloud-controller-manager-app."
                        },
                        "azureCloudNodeManager": {
                            "$ref": "#/$defs/helmRelease",
                            "type": "object",
                            "title": "Azure cloud node manager",
                            "description": "Configuration of azure-cloud-node-manager-app. For all available values see https://github.com/giantswarm/azure-cloud-node-manager-app."
                        },
                        "azureDiskCsiDriver": {
                            "$ref": "#/$defs/helmRelease",
                            "type": "object",
                            "title": "Azure Disk CSI driver",
                            "description": "Configuration of azuredisk-csi-driver-app. For all available values see https://github.com/giantswarm/azuredisk-csi-driver-app."
                        },
                        "azureFileCsiDriver": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "Azure File CSI driver service monitors",
                            "description": "Configuration of azure-file-csi-driver. For all available values see https://github.com/giantswarm/azurefile-csi-driver-app."
                        },
                        "capiNodeLabeler": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "capi-node-labeler",
                            "description": "Configuration of capi-node-labeler. For all available values see https://github.com/giantswarm/capi-node-labeler."
                        },
                        "certExporter": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "cert-exporter",
                            "description": "Configuration of cert-exporter. For all available values see https://github.com/giantswarm/cert-exporter."
                        },
                        "certManager": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "cert-manager",
                            "description": "Configuration of cert-manager. For all available values see https://github.com/giantswarm/cert-manager-app."
                        },
                        "chartOperatorExtensions": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "chart-operator-extensions",
                            "description": "Configuration of chart-operator-extensions. For all available values see https://github.com/giantswarm/chart-operator-extensions."
                        },
                        "cilium": {
                            "$ref": "#/$defs/helmRelease",
                            "type": "object",
                            "title": "Cilium",
                            "description": "Configuration of cilium-app. For all available values see https://github.com/giantswarm/cilium-app."
                        },
                        "ciliumServiceMonitors": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "Cilium service monitors",
                            "description": "Configuration of cilium-servicemonitors. For all available values see https://github.com/giantswarm/cilium-servicemonitors-app."
                        },
                        "clusterAutoscaler": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "cluster-autoscaler",
                            "description": "Configuration of cluster-autoscaler. For all available values see https://github.com/giantswarm/cluster-autoscaler-app."
                        },
                        "coreDns": {
                            "$ref": "#/$defs/helmRelease",
                            "type": "object",
                            "title": "CoreDNS",
                            "description": "Configuration of coredns-app. For all available values see https://github.com/giantswarm/coredns-app."
                        },
                        "etcdKubernetesResourcesCountExporter": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "etcd-kubernetes-resources-count-exporter",
                            "description": "Configuration of etcd-kubernetes-resources-count-exporter. For all available values see https://github.com/giantswarm/etcd-kubernetes-resources-count-exporter."
                        },
                        "externalDns": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "external-dns",
                            "description": "Configuration of external-dns. For all available values see https://github.com/giantswarm/external-dns-app."
                        },
                        "externalDnsPrivate": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "external-dns-private",
                            "description": "Configuration of external-dns private. For all available values see https://github.com/giantswarm/external-dns-app."
                        },
                        "k8sAuditMetrics": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "k8s-audit-metrics",
                            "description": "Configuration of k8s-audit-metrics. For all available values see https://github.com/giantswarm/k8s-audit-metrics."
                        },
                        "k8sDnsNodeCache": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "k8s-dns-node-cache",
                            "description": "Configuration of k8s-dns-node-cache. For all available values see https://github.com/giantswarm/k8s-dns-node-cache-app."
                        },
                        "metricsServer": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "metrics-server",
                            "description": "Configuration of metrics-server. For all available values see https://github.com/giantswarm/metrics-server-app."
                        },
                        "netExporter": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "net-exporter",
                            "description": "Configuration of net-exporter. For all available values see https://github.com/giantswarm/net-exporter."
                        },
                        "networkPolicies": {
                            "$ref": "#/$defs/helmRelease",
                            "type": "object",
                            "title": "NetworkPolicies",
                            "description": "Configuration of network-policies-app. For all available values see https://github.com/giantswarm/network-policies-app."
                        },
                        "nodeExporter": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "node-exporter",
                            "description": "Configuration of node-exporter. For all available values see https://github.com/giantswarm/node-exporter-app."
                        },
                        "observabilityBundle": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "observability-bundle",
                            "description": "Configuration of observability-bundle. For all available values see https://github.com/giantswarm/observability-bundle."
                        },
                        "prometheusBlackboxExporter": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "prometheus-blackbox-exporter",
                            "description": "Configuration of prometheus-blackbox-exporter. For all available values see https://github.com/giantswarm/prometheus-blackbox-exporter-app."
                        },
                        "securityBundle": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "security-bundle",
                            "description": "Configuration of security-bundle. For all available values see https://github.com/giantswarm/security-bundle."
                        },
                        "teleportKubeAgent": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "teleport-kube-agent",
                            "description": "Configuration of teleport-kube-agent. For all available values see https://github.com/giantswarm/teleport-kube-agent."
                        },
                        "verticalPodAutoscaler": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "vertical-pod-autoscaler",
                            "description": "Configuration of vertical-pod-autoscaler. For all available values see https://github.com/giantswarm/vertical-pod-autoscaler-app."
                        },
                        "verticalPodAutoscalerCrd": {
                            "$ref": "#/$defs/helmRelease",
                            "type": "object",
                            "title": "Vertical-pod-autoscaler CRD",
                            "description": "Configuration of vertical-pod-autoscaler-crd-app. For all available values see https://github.com/giantswarm/vertical-pod-autoscaler-crd."
                        }
                    }
                },
                "components": {
                    "type": "object",
                    "title": "Components",
                    "description": "Advanced configuration of components that are running on all nodes.",
                    "additionalProperties": false,
                    "properties": {
                        "containerd": {
                            "type": "object",
                            "title": "Containerd",
                            "description": "Configuration of containerd.",
                            "required": [
                                "containerRegistries"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "containerRegistries": {
                                    "type": "object",
                                    "title": "Container registries",
                                    "description": "Endpoints and credentials configuration for container registries.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "title": "Registries",
                                        "description": "Container registries and mirrors",
                                        "items": {
                                            "type": "object",
                                            "title": "Registry",
                                            "required": [
                                                "endpoint"
                                            ],
                                            "properties": {
                                                "credentials": {
                                                    "type": "object",
                                                    "title": "Credentials",
                                                    "properties": {
                                                        "auth": {
                                                            "type": "string",
                                                            "title": "Auth",
                                                            "description": "Base64-encoded string from the concatenation of the username, a colon, and the password."
                                                        },
                                                        "identitytoken": {
                                                            "type": "string",
                                                            "title": "Identity token",
                                                            "description": "Used to authenticate the user and obtain an access token for the registry."
                                                        },
                                                        "password": {
                                                            "type": "string",
                                                            "title": "Password",
                                                            "description": "Used to authenticate for the registry with username/password."
                                                        },
                                                        "username": {
                                                            "type": "string",
                                                            "title": "Username",
                                                            "description": "Used to authenticate for the registry with username/password."
                                                        }
                                                    }
                                                },
                                                "endpoint": {
                                                    "type": "string",
                                                    "title": "Endpoint",
                                                    "description": "Endpoint for the container registry."
                                                }
                                            }
                                        }
                                    },
                                    "default": {
                                        "docker.io": [
                                            {
                                                "endpoint": "registry-1.docker.io"
                                            },
                                            {
                                                "endpoint": "giantswarm.azurecr.io"
                                            }
                                        ],
                                        "gsoci.azurecr.io": [
                                            {
                                                "endpoint": "gsoci.azurecr.io"
                                            }
                                        ]
                                    }
                                },
                                "localRegistryCache": {
                                    "type": "object",
                                    "title": "Local registry caches configuration",
                                    "description": "Enable local cache via http://127.0.0.1:<PORT>.",
                                    "required": [
                                        "enabled",
                                        "port"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean",
                                            "title": "Enable local registry caches",
                                            "description": "Flag to enable local registry cache.",
                                            "default": false
                                        },
                                        "mirroredRegistries": {
                                            "type": "array",
                                            "title": "Registries to cache locally",
                                            "description": "A list of registries that should be cached.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "default": []
                                        },
                                        "port": {
                                            "type": "integer",
                                            "title": "Local port for the registry cache",
                                            "description": "Port for the local registry cache under: http://127.0.0.1:<PORT>.",
                                            "default": 32767
                                        }
                                    }
                                },
                                "managementClusterRegistryCache": {
                                    "type": "object",
                                    "title": "Management cluster registry cache",
                                    "description": "Caching container registry on a management cluster level.",
                                    "required": [
                                        "enabled"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean",
                                            "title": "Enabled",
                                            "description": "Enabling this will configure containerd to use management cluster's Zot registry service. To make use of it as a pull-through cache, you also have to specify registries to cache images for.",
                                            "default": true
                                        },
                                        "mirroredRegistries": {
                                            "type": "array",
                                            "title": "Registries to cache",
                                            "description": "Here you must specify each registry to cache container images for. Please also make sure to have an entry for each registry in Global > Components > Containerd > Container registries.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "default": [
                                                "gsoci.azurecr.io"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "connectivity": {
                    "type": "object",
                    "title": "Connectivity",
                    "properties": {
                        "allowedCIDRs": {
                            "type": "array",
                            "title": "List of CIDRs which have to been allowed to connect to the API Server endpoint",
                            "items": {
                                "type": "string"
                            },
                            "default": []
                        },
                        "baseDomain": {
                            "type": "string",
                            "title": "Base DNS domain",
                            "default": "azuretest.gigantic.io"
                        },
                        "network": {
                            "type": "object",
                            "title": "Network",
                            "properties": {
                                "controlPlane": {
                                    "type": "object",
                                    "title": "Control plane",
                                    "properties": {
                                        "cidr": {
                                            "type": "string",
                                            "title": "Subnet",
                                            "default": "10.0.0.0/20"
                                        },
                                        "privateEndpoints": {
                                            "type": "array",
                                            "title": "Private endpoints",
                                            "items": {
                                                "type": "object",
                                                "title": "Private endpoint",
                                                "required": [
                                                    "name",
                                                    "privateLinkServiceConnections"
                                                ],
                                                "properties": {
                                                    "applicationSecurityGroups": {
                                                        "type": "array",
                                                        "title": "Application security groups",
                                                        "description": "ApplicationSecurityGroups specifies the Application security group in which the private endpoint IP configuration is included.",
                                                        "items": {
                                                            "type": "string",
                                                            "title": "Application security group"
                                                        },
                                                        "default": []
                                                    },
                                                    "customNetworkInterfaceName": {
                                                        "type": "string",
                                                        "title": "Custom network interface name",
                                                        "description": "CustomNetworkInterfaceName specifies the network interface name associated with the private endpoint.",
                                                        "default": ""
                                                    },
                                                    "manualApproval": {
                                                        "type": "boolean",
                                                        "title": "Manual approval",
                                                        "description": "ManualApproval specifies if the connection approval needs to be done manually or not. Set it true when the network admin does not have access to approve connections to the remote resource.",
                                                        "default": false
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "title": "Name of the private endpoint (must be unique in the resource group)",
                                                        "default": ""
                                                    },
                                                    "privateIPAddresses": {
                                                        "type": "array",
                                                        "title": "Private IP addresses",
                                                        "description": "PrivateIPAddresses specifies the IP addresses for the network interface associated with the private endpoint. They have to be part of the subnet where the private endpoint is linked.",
                                                        "items": {
                                                            "type": "string",
                                                            "title": "Private IP address"
                                                        },
                                                        "default": []
                                                    },
                                                    "privateLinkServiceConnections": {
                                                        "type": "array",
                                                        "title": "Private link service IDs",
                                                        "items": {
                                                            "type": "object",
                                                            "title": "Private link service definition",
                                                            "required": [
                                                                "privateLinkServiceID"
                                                            ],
                                                            "properties": {
                                                                "groupIDs": {
                                                                    "type": "array",
                                                                    "title": "Group IDs",
                                                                    "description": "GroupIDs specifies the ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.",
                                                                    "items": {
                                                                        "type": "string",
                                                                        "title": "Group ID",
                                                                        "examples": [
                                                                            "blob"
                                                                        ]
                                                                    },
                                                                    "default": []
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "title": "Name",
                                                                    "description": "Name specifies the name of the private link service.",
                                                                    "default": ""
                                                                },
                                                                "privateLinkServiceID": {
                                                                    "type": "string",
                                                                    "title": "The private link service ID",
                                                                    "examples": [
                                                                        "/subscriptions/12345678-9abc-def0-1234-567890abcdef/resourceGroups/rg1/providers/Microsoft.Network/privateLinkServices/privatelink1",
                                                                        "/subscriptions/12345678-9abc-def0-1234-567890abcdef/resourceGroups/rg2/providers/Microsoft.Storage/storageAccounts/bucket1"
                                                                    ],
                                                                    "pattern": "^/subscriptions/[a-fA-F0-9][-a-fA-F0-9]+[a-fA-F0-9]/resourceGroups/[^/]+/providers/[^/]+/[^/]+/.+$"
                                                                },
                                                                "requestMessage": {
                                                                    "type": "string",
                                                                    "title": "Request message",
                                                                    "description": "RequestMessage specifies a message passed to the owner of the remote resource with the private endpoint connection request.",
                                                                    "default": ""
                                                                }
                                                            }
                                                        },
                                                        "default": []
                                                    }
                                                }
                                            },
                                            "default": []
                                        },
                                        "routeTableName": {
                                            "type": "string",
                                            "title": "ControlPlane route table name",
                                            "description": "Name of the control plane route table.",
                                            "maxLength": 80,
                                            "minLength": 2,
                                            "pattern": "^[-\\w\\._]+$"
                                        },
                                        "subnetName": {
                                            "type": "string",
                                            "title": "ControlPlane subnet name",
                                            "description": "Name of the control plane subnet.",
                                            "maxLength": 64,
                                            "minLength": 2,
                                            "pattern": "^[-\\w\\._]+$"
                                        }
                                    }
                                },
                                "hostCidr": {
                                    "type": "string",
                                    "title": "Node subnet",
                                    "description": "IPv4 address range for nodes, in CIDR notation.",
                                    "default": "10.0.0.0/16"
                                },
                                "mode": {
                                    "type": "string",
                                    "title": "Network mode",
                                    "description": "Specifying if the cluster resources are publicly accessible or not.",
                                    "enum": [
                                        "public",
                                        "private"
                                    ],
                                    "default": "public"
                                },
                                "pods": {
                                    "type": "object",
                                    "title": "Pods",
                                    "properties": {
                                        "cidrBlocks": {
                                            "type": "array",
                                            "title": "Pod subnets",
                                            "items": {
                                                "type": "string",
                                                "title": "Pod subnet",
                                                "description": "IPv4 address range for pods, in CIDR notation.",
                                                "examples": [
                                                    "192.168.0.0/16"
                                                ]
                                            },
                                            "default": [
                                                "192.168.0.0/16"
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1
                                        }
                                    }
                                },
                                "services": {
                                    "type": "object",
                                    "title": "Services",
                                    "properties": {
                                        "cidrBlocks": {
                                            "type": "array",
                                            "title": "K8s Service subnets",
                                            "items": {
                                                "type": "string",
                                                "title": "Service subnet",
                                                "description": "IPv4 address range for kubernetes services, in CIDR notation.",
                                                "examples": [
                                                    "172.31.0.0/16"
                                                ]
                                            },
                                            "default": [
                                                "172.31.0.0/16"
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1
                                        }
                                    }
                                },
                                "workers": {
                                    "type": "object",
                                    "title": "Workers",
                                    "properties": {
                                        "cidr": {
                                            "type": "string",
                                            "title": "Subnet",
                                            "default": "10.0.16.0/20"
                                        },
                                        "natGatewayName": {
                                            "type": "string",
                                            "title": "Nodes subnet nat-gateway name",
                                            "description": "Name of the nat gateway on the nodes subnet.",
                                            "maxLength": 64,
                                            "minLength": 2,
                                            "pattern": "^[-\\w\\._]+$"
                                        },
                                        "privateEndpoints": {
                                            "type": "array",
                                            "title": "Private endpoints",
                                            "items": {
                                                "type": "object",
                                                "title": "Private endpoint",
                                                "required": [
                                                    "name",
                                                    "privateLinkServiceConnections"
                                                ],
                                                "properties": {
                                                    "applicationSecurityGroups": {
                                                        "type": "array",
                                                        "title": "Application security groups",
                                                        "description": "ApplicationSecurityGroups specifies the Application security group in which the private endpoint IP configuration is included.",
                                                        "items": {
                                                            "type": "string",
                                                            "title": "Application security group"
                                                        },
                                                        "default": []
                                                    },
                                                    "customNetworkInterfaceName": {
                                                        "type": "string",
                                                        "title": "Custom network interface name",
                                                        "description": "CustomNetworkInterfaceName specifies the network interface name associated with the private endpoint.",
                                                        "default": ""
                                                    },
                                                    "manualApproval": {
                                                        "type": "boolean",
                                                        "title": "Manual approval",
                                                        "description": "ManualApproval specifies if the connection approval needs to be done manually or not. Set it true when the network admin does not have access to approve connections to the remote resource.",
                                                        "default": false
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "title": "Name of the private endpoint (must be unique in the resource group)",
                                                        "default": ""
                                                    },
                                                    "privateIPAddresses": {
                                                        "type": "array",
                                                        "title": "Private IP addresses",
                                                        "description": "PrivateIPAddresses specifies the IP addresses for the network interface associated with the private endpoint. They have to be part of the subnet where the private endpoint is linked.",
                                                        "items": {
                                                            "type": "string",
                                                            "title": "Private IP address"
                                                        },
                                                        "default": []
                                                    },
                                                    "privateLinkServiceConnections": {
                                                        "type": "array",
                                                        "title": "Private link service IDs",
                                                        "items": {
                                                            "type": "object",
                                                            "title": "Private link service definition",
                                                            "required": [
                                                                "privateLinkServiceID"
                                                            ],
                                                            "properties": {
                                                                "groupIDs": {
                                                                    "type": "array",
                                                                    "title": "Group IDs",
                                                                    "description": "GroupIDs specifies the ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.",
                                                                    "items": {
                                                                        "type": "string",
                                                                        "title": "Group ID",
                                                                        "examples": [
                                                                            "blob"
                                                                        ]
                                                                    },
                                                                    "default": []
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "title": "Name",
                                                                    "description": "Name specifies the name of the private link service.",
                                                                    "default": ""
                                                                },
                                                                "privateLinkServiceID": {
                                                                    "type": "string",
                                                                    "title": "The private link service ID",
                                                                    "examples": [
                                                                        "/subscriptions/12345678-9abc-def0-1234-567890abcdef/resourceGroups/rg1/providers/Microsoft.Network/privateLinkServices/privatelink1",
                                                                        "/subscriptions/12345678-9abc-def0-1234-567890abcdef/resourceGroups/rg2/providers/Microsoft.Storage/storageAccounts/bucket1"
                                                                    ],
                                                                    "pattern": "^/subscriptions/[a-fA-F0-9][-a-fA-F0-9]+[a-fA-F0-9]/resourceGroups/[^/]+/providers/[^/]+/[^/]+/.+$"
                                                                },
                                                                "requestMessage": {
                                                                    "type": "string",
                                                                    "title": "Request message",
                                                                    "description": "RequestMessage specifies a message passed to the owner of the remote resource with the private endpoint connection request.",
                                                                    "default": ""
                                                                }
                                                            }
                                                        },
                                                        "default": []
                                                    }
                                                }
                                            },
                                            "default": []
                                        },
                                        "routeTableName": {
                                            "type": "string",
                                            "title": "Nodes route table name",
                                            "description": "Name of the nodes route table.",
                                            "maxLength": 80,
                                            "minLength": 2,
                                            "pattern": "^[-\\w\\._]+$"
                                        },
                                        "subnetName": {
                                            "type": "string",
                                            "title": "Nodes subnet name",
                                            "description": "Name of the nodes subnet.",
                                            "maxLength": 64,
                                            "minLength": 2,
                                            "pattern": "^[-\\w\\._]+$"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "controlPlane": {
                    "type": "object",
                    "title": "Control plane",
                    "properties": {
                        "containerdVolumeSizeGB": {
                            "type": "integer",
                            "title": "Containerd volume size (GB)",
                            "default": 100,
                            "minimum": 20
                        },
                        "encryptionAtHost": {
                            "type": "boolean",
                            "title": "Encryption at host",
                            "description": "Enable encryption at host for the control plane nodes.",
                            "default": false
                        },
                        "etcdVolumeSizeGB": {
                            "type": "integer",
                            "title": "Etcd volume size (GB)",
                            "default": 100,
                            "minimum": 20
                        },
                        "instanceType": {
                            "type": "string",
                            "title": "Node VM size",
                            "default": "Standard_D4s_v5"
                        },
                        "kubeletVolumeSizeGB": {
                            "type": "integer",
                            "title": "Kubelet volume size (GB)",
                            "default": 100,
                            "minimum": 20
                        },
                        "oidc": {
                            "type": "object",
                            "title": "OIDC authentication",
                            "properties": {
                                "caPem": {
                                    "type": "string",
                                    "title": "Certificate authority",
                                    "description": "Identity provider's CA certificate in PEM format.",
                                    "default": ""
                                },
                                "clientId": {
                                    "type": "string",
                                    "title": "Client ID",
                                    "default": ""
                                },
                                "groupsClaim": {
                                    "type": "string",
                                    "title": "Groups claim",
                                    "default": ""
                                },
                                "issuerUrl": {
                                    "type": "string",
                                    "title": "Issuer URL",
                                    "default": ""
                                },
                                "usernameClaim": {
                                    "type": "string",
                                    "title": "Username claim",
                                    "default": ""
                                }
                            }
                        },
                        "replicas": {
                            "type": "integer",
                            "title": "Number of nodes",
                            "default": 3,
                            "exclusiveMinimum": 0
                        },
                        "rootVolumeSizeGB": {
                            "type": "integer",
                            "title": "Root volume size (GB)",
                            "default": 50,
                            "minimum": 20
                        }
                    }
                },
                "internal": {
                    "type": "object",
                    "title": "Internal",
                    "description": "For Giant Swarm internal use only, not stable, or not supported by UIs.",
                    "properties": {
                        "hashSalt": {
                            "type": "string",
                            "title": "Hash salt",
                            "description": "If specified, this token is used as a salt to the hash suffix of some resource names. Can be used to force-recreate some resources."
                        }
                    }
                },
                "managementCluster": {
                    "type": "string",
                    "title": "The capi MC managing this cluster"
                },
                "metadata": {
                    "type": "object",
                    "title": "Metadata",
                    "properties": {
                        "description": {
                            "type": "string",
                            "title": "Cluster description",
                            "description": "User-friendly description of the cluster's purpose."
                        },
                        "labels": {
                            "type": "object",
                            "title": "Labels",
                            "description": "These labels are added to the Kubernetes resources defining this cluster.",
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[a-zA-Z0-9/\\._-]+$": {
                                    "type": "string",
                                    "title": "Label",
                                    "maxLength": 63,
                                    "minLength": 0,
                                    "pattern": "^[a-zA-Z0-9\\._-]+$"
                                }
                            }
                        },
                        "name": {
                            "type": "string",
                            "title": "Cluster name",
                            "description": "Unique identifier, cannot be changed after creation."
                        },
                        "organization": {
                            "type": "string",
                            "title": "Organization"
                        },
                        "preventDeletion": {
                            "type": "boolean",
                            "title": "Prevent cluster deletion",
                            "default": false
                        },
                        "servicePriority": {
                            "type": "string",
                            "title": "Service priority",
                            "description": "The relative importance of this cluster.",
                            "$comment": "Defined in https://github.com/giantswarm/rfc/tree/main/classify-cluster-priority",
                            "enum": [
                                "highest",
                                "medium",
                                "lowest"
                            ],
                            "default": "highest"
                        }
                    }
                },
                "nodePools": {
                    "type": "object",
                    "title": "Node pools",
                    "description": "Node pools of the cluster. If not specified, this defaults to the value of `cluster.providerIntegration.workers.defaultNodePools`.",
                    "additionalProperties": false,
                    "patternProperties": {
                        "^[a-z0-9][-a-z0-9]{3,18}[a-z0-9]$": {
                            "$ref": "#/$defs/machinePool"
                        }
                    }
                },
                "podSecurityStandards": {
                    "type": "object",
                    "title": "Pod Security Standards",
                    "properties": {
                        "enforced": {
                            "type": "boolean",
                            "title": "Enforced Pod Security Standards",
                            "description": "Use PSSs instead of PSPs.",
                            "default": true
                        }
                    }
                },
                "providerSpecific": {
                    "type": "object",
                    "title": "Azure settings",
                    "required": [
                        "subscriptionId"
                    ],
                    "properties": {
                        "additionalResourceTags": {
                            "type": "object",
                            "title": "Additional resource tags",
                            "description": "Additional tags to be added to the resource group and to all resources in it.",
                            "additionalProperties": {
                                "type": "string",
                                "title": "Tag value",
                                "description": "Value of the tag",
                                "maxLength": 256
                            },
                            "default": {},
                            "propertyNames": {
                                "type": "string",
                                "title": "Tag name",
                                "description": "Name of the tag",
                                "maxLength": 128,
                                "pattern": "^[^<>%&?/\\\\]*$"
                            }
                        },
                        "allowedSubscriptions": {
                            "type": "array",
                            "title": "List of Azure Subscription IDs that are allowed to work on this cluster",
                            "items": {
                                "$ref": "#/$defs/subscriptionId",
                                "type": "string"
                            },
                            "default": []
                        },
                        "azureClusterIdentity": {
                            "type": "object",
                            "title": "Identity",
                            "description": "AzureClusterIdentity resource to use for this cluster.",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "default": "cluster-identity"
                                },
                                "namespace": {
                                    "type": "string",
                                    "title": "Namespace",
                                    "default": "org-giantswarm"
                                }
                            }
                        },
                        "identity": {
                            "type": "object",
                            "title": "Identity",
                            "properties": {
                                "systemAssignedScope": {
                                    "type": "string",
                                    "title": "Scope of SystemAssignedIdentity",
                                    "enum": [
                                        "Subscription",
                                        "ResourceGroup"
                                    ],
                                    "default": "ResourceGroup"
                                }
                            }
                        },
                        "identityClientID": {
                            "type": "string",
                            "title": "Identity Client ID",
                            "description": "Identity Client ID - only necessary for management clusters."
                        },
                        "location": {
                            "type": "string",
                            "title": "Location",
                            "$comment": "Valid options from https://github.com/giantswarm/capi-image-builder/blob/v1.6.10/helm/capi-image-builder/values.yaml#L48-L52",
                            "enum": [
                                "eastus",
                                "germanywestcentral",
                                "northeurope",
                                "westeurope",
                                "westus2"
                            ],
                            "default": "westeurope"
                        },
                        "network": {
                            "type": "object",
                            "title": "Azure network settings",
                            "description": "Azure VNet peering and other Azure-specific network settings.",
                            "additionalProperties": false,
                            "properties": {
                                "peerings": {
                                    "type": "array",
                                    "title": "VNet peerings",
                                    "description": "Specifying VNets (their resource groups and names) to which the peering is established.",
                                    "items": {
                                        "type": "object",
                                        "title": "VNet peering",
                                        "additionalProperties": false,
                                        "properties": {
                                            "remoteVnetName": {
                                                "type": "string",
                                                "title": "VNet name",
                                                "description": "Name of the remote VNet to which the peering is established.",
                                                "maxLength": 64,
                                                "minLength": 2,
                                                "pattern": "^[-\\w\\._]+$"
                                            },
                                            "resourceGroup": {
                                                "type": "string",
                                                "title": "Resource group name",
                                                "description": "Resource group for the remote VNet to which the peering is established.",
                                                "maxLength": 90,
                                                "minLength": 1,
                                                "pattern": "^[-\\w\\._\\(\\)]+$"
                                            }
                                        },
                                        "uniqueItems": true
                                    },
                                    "default": []
                                }
                            }
                        },
                        "subscriptionId": {
                            "$ref": "#/$defs/subscriptionId",
                            "type": "string",
                            "title": "Subscription ID",
                            "description": "ID of the Azure subscription this cluster will run in."
                        }
                    }
                },
                "release": {
                    "type": "object",
                    "title": "Release",
                    "description": "Information about the workload cluster release.",
                    "required": [
                        "version"
                    ],
                    "properties": {
                        "version": {
                            "type": "string",
                            "title": "Version"
                        }
                    }
                }
            }
        },
        "internal": {
            "type": "object",
            "title": "Internal settings",
            "properties": {
                "defaults": {
                    "type": "object",
                    "title": "Default settings",
                    "properties": {
                        "evictionMinimumReclaim": {
                            "type": "string",
                            "title": "Default settings for eviction minimum reclaim",
                            "default": "imagefs.available=5%,memory.available=100Mi,nodefs.available=5%"
                        },
                        "hardEvictionThresholds": {
                            "type": "string",
                            "title": "Default settings for hard eviction thresholds",
                            "default": "memory.available<200Mi,nodefs.available<10%,nodefs.inodesFree<3%,imagefs.available<10%,pid.available<20%"
                        },
                        "softEvictionGracePeriod": {
                            "type": "string",
                            "title": "Default settings for soft eviction grace period",
                            "default": "memory.available=30s,nodefs.available=2m,nodefs.inodesFree=1m,imagefs.available=2m,pid.available=1m"
                        },
                        "softEvictionThresholds": {
                            "type": "string",
                            "title": "Default settings for soft eviction thresholds",
                            "default": "memory.available<500Mi,nodefs.available<15%,nodefs.inodesFree<5%,imagefs.available<15%,pid.available<30%"
                        }
                    }
                },
                "enableVpaResources": {
                    "type": "boolean",
                    "title": "Enable VPA Resources in helmreleases",
                    "default": true
                },
                "kubectlImage": {
                    "type": "object",
                    "title": "Kubectl Image settings",
                    "properties": {
                        "name": {
                            "type": "string",
                            "title": "Image name",
                            "description": "Name of the image Registry",
                            "default": "giantswarm/kubectl"
                        },
                        "registry": {
                            "type": "string",
                            "title": "Kubectl Image Registry",
                            "description": "Registry for the kubectl image",
                            "default": "gsoci.azurecr.io"
                        },
                        "tag": {
                            "type": "string",
                            "title": "Image tag",
                            "default": "1.25.15"
                        }
                    }
                },
                "kubernetesVersion": {
                    "type": "string",
                    "title": "Kubernetes version",
                    "default": "1.25.16"
                },
                "network": {
                    "type": "object",
                    "title": "Network configuration",
                    "description": "Internal network configuration that is susceptible to more frequent change",
                    "properties": {
                        "vnet": {
                            "type": "object",
                            "title": "VNet spec",
                            "description": "Existing VNet configuration. This is susceptible to more frequent change or removal.",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "title": "VNet name",
                                    "description": "Name of the existing VNet.",
                                    "maxLength": 64,
                                    "minLength": 2,
                                    "pattern": "^[-\\w\\._]+$"
                                },
                                "resourceGroup": {
                                    "type": "string",
                                    "title": "Resource group name",
                                    "description": "Resource group where the existing VNet is deployed.",
                                    "maxLength": 90,
                                    "minLength": 1,
                                    "pattern": "^[-\\w\\._\\(\\)]+$"
                                }
                            },
                            "default": {}
                        },
                        "vpn": {
                            "type": "object",
                            "title": "VPN configuration",
                            "description": "Internal VPN configuration that is susceptible to more frequent change",
                            "properties": {
                                "gatewayMode": {
                                    "type": "string",
                                    "title": "VPN gateway mode",
                                    "enum": [
                                        "local",
                                        "none",
                                        "remote"
                                    ],
                                    "default": "none"
                                }
                            }
                        }
                    }
                },
                "sandboxContainerImage": {
                    "type": "object",
                    "title": "The image used by sandbox / pause container",
                    "properties": {
                        "name": {
                            "type": "string",
                            "title": "Repository",
                            "default": "giantswarm/pause"
                        },
                        "registry": {
                            "type": "string",
                            "title": "Registry",
                            "default": "gsoci.azurecr.io"
                        },
                        "tag": {
                            "type": "string",
                            "title": "Tag",
                            "default": "3.9"
                        }
                    }
                },
                "teleport": {
                    "type": "object",
                    "title": "Teleport",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "title": "Enable teleport",
                            "default": true
                        },
                        "proxyAddr": {
                            "type": "string",
                            "title": "Teleport proxy address",
                            "default": "teleport.giantswarm.io:443"
                        },
                        "version": {
                            "type": "string",
                            "title": "Teleport version",
                            "default": "14.1.3"
                        }
                    }
                }
            }
        },
        "managementCluster": {
            "type": "string",
            "title": "The capi MC managing this cluster"
        },
        "provider": {
            "type": "string",
            "title": "Cluster API provider name"
        }
    }
}
