# Auto-generated by helm-values-gen, do not edit!

baseDomain: azuretest.gigantic.io
cluster:
  internal:
    advancedConfiguration:
      controlPlane:
        etcd:
          dataDir: /var/lib/etcddisk/etcd
  providerIntegration:
    apps:
      capiNodeLabeler:
        enable: true
      certExporter:
        enable: true
      certManager:
        configTemplateName: azureCertManagerHelmValues
        enable: true
      chartOperatorExtensions:
        enable: true
      cilium:
        configTemplateName: azureCiliumHelmValues
        enable: true
      ciliumServiceMonitors:
        enable: true
      clusterAutoscaler:
        enable: false
      coreDns:
        configTemplateName: azureCorednsHelmValues
        enable: true
      etcdKubernetesResourcesCountExporter:
        enable: true
      externalDns:
        configTemplateName: azureExternalDnsHelmValues
        enable: true
      k8sAuditMetrics:
        enable: true
      k8sDnsNodeCache:
        enable: true
      metricsServer:
        enable: true
      netExporter:
        enable: true
      networkPolicies:
        configTemplateName: azureNetworkPoliciesHelmValues
        enable: true
      nodeExporter:
        enable: true
      observabilityBundle:
        enable: true
      observabilityPolicies:
        enable: true
      prometheusBlackboxExporter:
        enable: true
      securityBundle:
        configTemplateName: azureSecurityBundleHelmValues
        enable: true
      teleportKubeAgent:
        enable: true
      verticalPodAutoscaler:
        enable: true
      verticalPodAutoscalerCrd:
        enable: true
    controlPlane:
      kubeadmConfig:
        clusterConfiguration:
          apiServer:
            cloudConfig: /etc/kubernetes/azure.json
        diskSetup:
          filesystems:
            - device: /dev/disk/azure/scsi1/lun0
              extraOpts:
                - -E
                - lazy_itable_init=1,lazy_journal_init=1
              filesystem: ext4
              label: etcd_disk
              overwrite: false
            - device: /dev/disk/azure/scsi1/lun1
              extraOpts:
                - -E
                - lazy_itable_init=1,lazy_journal_init=1
              filesystem: ext4
              label: containerd_disk
              overwrite: false
            - device: /dev/disk/azure/scsi1/lun2
              extraOpts:
                - -E
                - lazy_itable_init=1,lazy_journal_init=1
              filesystem: ext4
              label: kubelet_disk
              overwrite: false
        files:
          - contentFrom:
              secret:
                key: update_etc_hosts.sh
                name: provider-specific-files
                prependClusterNameAsPrefix: true
            path: /opt/update_etc_hosts.sh
            permissions: "0755"
        ignition:
          containerLinuxConfig:
            additionalConfig:
              storage:
                disks:
                  - device: /dev/disk/azure/scsi1/lun0
                    partitions:
                      - number: 1
        mounts:
          - - etcd_disk
            - /var/lib/etcddisk
          - - containerd_disk
            - /var/lib/containerd
          - - kubelet_disk
            - /var/lib/kubelet
        postKubeadmCommands:
          - /opt/update_etc_hosts.sh postKubeadm
        preKubeadmCommands:
          - /opt/update_etc_hosts.sh preKubeadm
          - /bin/test ! -d /var/lib/kubelet && (/bin/mkdir -p /var/lib/kubelet && /bin/chmod 0750 /var/lib/kubelet)
          - sed -i -e 's/registry.k8s.io\/pause/quay.io\/giantswarm\/pause/' /etc/sysconfig/kubelet
      resources:
        infrastructureMachineTemplate:
          group: infrastructure.cluster.x-k8s.io
          kind: AzureMachineTemplate
          version: v1beta1
        infrastructureMachineTemplateSpecTemplateName: controlplane-azuremachinetemplate-spec
    environmentVariables:
      hostName: HOSTNAME
      ipv4: COREOS_AZURE_IPV4_DYNAMIC
    osImage:
      channel: stable
      variant: ""
      version: 3815.2.0
    provider: azure
    resourcesApi:
      bastionResourceEnabled: false
      cleanupHelmReleaseResourcesEnabled: true
      clusterResourceEnabled: true
      controlPlaneResourceEnabled: true
      coreDnsHelmReleaseResourceEnabled: false
      helmRepositoryResourcesEnabled: true
      infrastructureCluster:
        group: infrastructure.cluster.x-k8s.io
        kind: AzureCluster
        version: v1beta1
      infrastructureMachinePool:
        group: infrastructure.cluster.x-k8s.io
        kind: AzureMachineTemplate
        version: v1beta1
      machineHealthCheckResourceEnabled: true
      machinePoolResourcesEnabled: true
      nodePoolKind: MachineDeployment
    useReleases: true
    workers:
      defaultNodePools:
        def00:
          customNodeLabels:
            - label=default
          instanceType: Standard_D4s_v5
          machineHealthCheck:
            enabled: true
            maxUnhealthy: 40%
            nodeStartupTimeout: 10m
            unhealthyNotReadyTimeout: 300s
            unhealthyUnknownTimeout: 300s
          replicas: 2
          rootVolumeSizeGB: 50
      kubeadmConfig:
        preKubeadmCommands:
          - /bin/test ! -d /var/lib/kubelet && (/bin/mkdir -p /var/lib/kubelet && /bin/chmod 0750 /var/lib/kubelet)
          - sed -i -e 's/registry.k8s.io\/pause/quay.io\/giantswarm\/pause/' /etc/sysconfig/kubelet
      resources:
        infrastructureMachineTemplateSpecTemplateName: machinedeployment-azuremachinetemplate-spec
global:
  apps:
    azureCloudControllerManager: {}
    azureCloudNodeManager: {}
    azureDiskCsiDriver: {}
    azureFileCsiDriver: {}
    capiNodeLabeler: {}
    certExporter: {}
    certManager: {}
    chartOperatorExtensions: {}
    cilium: {}
    ciliumServiceMonitors: {}
    clusterAutoscaler: {}
    coreDns: {}
    etcdKubernetesResourcesCountExporter: {}
    externalDns: {}
    externalDnsPrivate: {}
    k8sAuditMetrics: {}
    k8sDnsNodeCache: {}
    metricsServer: {}
    netExporter: {}
    networkPolicies: {}
    nodeExporter: {}
    observabilityBundle: {}
    observabilityPolicies: {}
    prometheusBlackboxExporter: {}
    securityBundle: {}
    teleportKubeAgent: {}
    verticalPodAutoscaler: {}
    verticalPodAutoscalerCrd: {}
  components:
    auditd:
      enabled: false
    containerd:
      containerRegistries:
        docker.io:
          - endpoint: registry-1.docker.io
          - endpoint: giantswarm.azurecr.io
        gsoci.azurecr.io:
          - endpoint: gsoci.azurecr.io
      localRegistryCache:
        enabled: false
        mirroredRegistries: []
        port: 32767
      managementClusterRegistryCache:
        enabled: true
        mirroredRegistries:
          - gsoci.azurecr.io
  connectivity:
    allowedCIDRs: []
    baseDomain: azuretest.gigantic.io
    network:
      controlPlane:
        cidr: 10.0.0.0/20
        privateEndpoints: []
      hostCidr: 10.0.0.0/16
      mode: public
      pods:
        cidrBlocks:
          - 192.168.0.0/16
      services:
        cidrBlocks:
          - 172.31.0.0/16
      workers:
        cidr: 10.0.16.0/20
        privateEndpoints: []
  controlPlane:
    containerdVolumeSizeGB: 100
    encryptionAtHost: false
    etcdVolumeSizeGB: 100
    instanceType: Standard_D4s_v5
    kubeletVolumeSizeGB: 100
    oidc:
      caPem: ""
      clientId: ""
      groupsClaim: ""
      issuerUrl: ""
      usernameClaim: ""
    replicas: 3
    rootVolumeSizeGB: 50
  internal: {}
  metadata:
    preventDeletion: false
    servicePriority: highest
  podSecurityStandards:
    enforced: true
  providerSpecific:
    additionalResourceTags: {}
    allowedSubscriptions: []
    azureClusterIdentity:
      name: cluster-identity
      namespace: org-giantswarm
    identity:
      systemAssignedScope: ResourceGroup
    location: westeurope
    network:
      peerings: []
  release: {}
internal:
  defaults:
    evictionMinimumReclaim: imagefs.available=5%,memory.available=100Mi,nodefs.available=5%
    hardEvictionThresholds: memory.available<200Mi,nodefs.available<10%,nodefs.inodesFree<3%,imagefs.available<10%,pid.available<20%
    softEvictionGracePeriod: memory.available=30s,nodefs.available=2m,nodefs.inodesFree=1m,imagefs.available=2m,pid.available=1m
    softEvictionThresholds: memory.available<500Mi,nodefs.available<15%,nodefs.inodesFree<5%,imagefs.available<15%,pid.available<30%
  enableVpaResources: true
  network:
    vnet: {}
    vpn:
      gatewayMode: none
  sandboxContainerImage:
    name: giantswarm/pause
    registry: gsoci.azurecr.io
    tag: "3.9"
  teleport:
    enabled: true
    proxyAddr: teleport.giantswarm.io:443
    version: 14.1.3
