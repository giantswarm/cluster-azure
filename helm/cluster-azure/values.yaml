# Auto-generated by helm-values-gen, do not edit!

baseDomain: azuretest.gigantic.io
cluster:
  providerIntegration:
    controlPlane:
      resources:
        infrastructureMachineTemplate:
          group: infrastructure.cluster.x-k8s.io
          kind: AzureMachineTemplate
          version: v1beta1
        infrastructureMachineTemplateSpecTemplateName: controlplane-azuremachinetemplate-spec
    osImage:
      channel: stable
      variant: ""
      version: 3815.2.0
    provider: azure
    resourcesApi:
      bastionResourceEnabled: false
      ciliumHelmReleaseResourceEnabled: false
      cleanupHelmReleaseResourcesEnabled: false
      clusterResourceEnabled: true
      controlPlaneResourceEnabled: true
      coreDnsHelmReleaseResourceEnabled: false
      helmRepositoryResourcesEnabled: false
      infrastructureCluster:
        group: infrastructure.cluster.x-k8s.io
        kind: AzureCluster
        version: v1beta1
      infrastructureMachinePool:
        group: infrastructure.cluster.x-k8s.io
        kind: AzureMachineDeployment
        version: v1beta1
      machineHealthCheckResourceEnabled: false
      machinePoolResourcesEnabled: false
      networkPoliciesHelmReleaseResourceEnabled: false
      nodePoolKind: MachineDeployment
      verticalPodAutoscalerCrdHelmReleaseResourceEnabled: false
    workers:
      defaultNodePools:
        def00:
          customNodeLabels:
            - label=default
          instanceType: Standard_D4s_v5
          replicas: 2
          rootVolumeSizeGB: 50
global:
  components:
    containerd:
      containerRegistries:
        docker.io:
          - endpoint: registry-1.docker.io
          - endpoint: giantswarm.azurecr.io
  connectivity:
    allowedCIDRs: []
    baseDomain: azuretest.gigantic.io
    network:
      controlPlane:
        cidr: 10.0.0.0/20
        privateEndpoints: []
      hostCidr: 10.0.0.0/16
      mode: public
      pods:
        cidrBlocks:
          - 192.168.0.0/16
      services:
        cidrBlocks:
          - 172.31.0.0/16
      workers:
        cidr: 10.0.16.0/20
        privateEndpoints: []
  controlPlane:
    containerdVolumeSizeGB: 100
    encryptionAtHost: false
    etcdVolumeSizeGB: 100
    instanceType: Standard_D4s_v5
    kubeletVolumeSizeGB: 100
    oidc:
      caPem: ""
      clientId: ""
      groupsClaim: ""
      issuerUrl: ""
      usernameClaim: ""
    replicas: 3
    rootVolumeSizeGB: 50
  metadata:
    servicePriority: highest
  podSecurityStandards:
    enforced: true
  providerSpecific:
    additionalResourceTags: {}
    azureClusterIdentity:
      name: cluster-identity
      namespace: org-giantswarm
    identity:
      systemAssignedScope: ResourceGroup
    location: westeurope
    network:
      peerings: []
internal:
  defaults:
    evictionMinimumReclaim: imagefs.available=5%,memory.available=100Mi,nodefs.available=5%
    hardEvictionThresholds: memory.available<200Mi,nodefs.available<10%,nodefs.inodesFree<3%,imagefs.available<10%,pid.available<20%
    softEvictionGracePeriod: memory.available=30s,nodefs.available=2m,nodefs.inodesFree=1m,imagefs.available=2m,pid.available=1m
    softEvictionThresholds: memory.available<500Mi,nodefs.available<15%,nodefs.inodesFree<5%,imagefs.available<15%,pid.available<30%
  enableVpaResources: true
  kubectlImage:
    name: giantswarm/kubectl
    registry: gsoci.azurecr.io
    tag: 1.25.15
  kubernetesVersion: 1.25.16
  network:
    vnet: {}
    vpn:
      gatewayMode: none
  sandboxContainerImage:
    name: giantswarm/pause
    registry: gsoci.azurecr.io
    tag: "3.9"
  teleport:
    enabled: true
    proxyAddr: teleport.giantswarm.io:443
    version: 14.1.3
