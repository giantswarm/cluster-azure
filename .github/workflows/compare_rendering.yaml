name: Compare Helm Rendering

on:
  pull_request:
  push:
    branches: [HEAD_BRANCH, main]

env:
  dyff_ver: "1.5.4"
  helm_ver: "3.11.1"
  yq_ver: "4.31.1"

jobs:
  # This job is for checking for the `/no_drift_detection` comment in the PR. When it is found,
  # the `get-installations` job is skipped, what makes `cmp-kustomization` skipped as well.
  check-cmp-state:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Find suspend comment
        uses: peter-evans/find-comment@v2
        continue-on-error: true
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: /no_drift_detection
    outputs:
      suspendcmp: ${{ steps.fc.outputs.comment-id }}
  get-rendering-values:
    needs: check-cmp-state
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && needs.check-cmp-state.outputs.suspendcmp == 0
    steps:
      - uses: actions/checkout@v3
      - name: list rendering values
        id: get-rendering-values
        run: |
          echo "installations=[\"$(ls -m management-clusters | tr -d ' \n' | sed 's/,/\", \"/g')\"]"
          echo
          echo "installations=[\"$(ls -m management-clusters | tr -d ' \n' | sed 's/,/\", \"/g')\"]" >> $GITHUB_OUTPUT
    outputs:
      installations: ${{ steps.get-installations.outputs.installations }}
  cmp-kustomizations:
    needs: get-installations
    runs-on: ubuntu-latest
    strategy:
      matrix:
        installation: ${{ fromJson(needs.get-installations.outputs.installations) }}
    if: github.event_name == 'pull_request'
    steps:
      - name: install kustomize
        uses: giantswarm/install-binary-action@v1
        with:
          binary: kustomize
          download_url: "https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/v${version}/kustomize_v${version}_linux_amd64.tar.gz"
          smoke_test: "${binary} version"
          tarball_binary_path: "${binary}"
          version: ${{ env.kustomize_ver }}
      - run: which kustomize
      - name: install yq
        uses: giantswarm/install-binary-action@v1
        with:
          binary: yq
          download_url: "https://github.com/mikefarah/yq/releases/download/v${version}/yq_linux_amd64.tar.gz"
          smoke_test: "${binary} --version"
          tarball_binary_path: "*/yq_linux_amd64"
          version: ${{ env.yq_ver }}
      - run: which yq
      - name: install dyff
        uses: giantswarm/install-binary-action@v1
        with:
          binary: dyff
          download_url: "https://github.com/homeport/dyff/releases/download/v${version}/dyff_${version}_linux_amd64.tar.gz"
          smoke_test: "${binary} version"
          tarball_binary_path: "${binary}"
          version: ${{ env.dyff_ver }}
      - run: which dyff
      - run: ls -la /opt/hostedtoolcache
      - uses: actions/checkout@v3
      - name: build and save installation
        run: |
          mkdir /tmp/${{ matrix.installation }}
          kustomize build \
          --enable-helm \
          --load-restrictor=LoadRestrictionsNone \
          management-clusters/${{ matrix.installation }} \
          | yq e 'select(.kind == "Kustomization") | select(.metadata.name == "flux")' - > /tmp/${{ matrix.installation }}/new.yaml
      - uses: actions/checkout@v3
        with:
          ref: 'main'
          path: 'old'
      - name: template all for the old branch
        run: |
          kustomize build \
          --enable-helm \
          --load-restrictor=LoadRestrictionsNone \
          old/management-clusters/${{ matrix.installation }} 2>/dev/null \
          | yq e 'select(.kind == "Kustomization") | select(.metadata.name == "flux")' - > /tmp/${{ matrix.installation }}/old.yaml
      - name: get the diffs
        uses: mathiasvr/command-output@v1
        id: diff
        with:
          run: |
            dyff between -s -i -b -g /tmp/${{ matrix.installation }}/old.yaml /tmp/${{ matrix.installation }}/new.yaml
